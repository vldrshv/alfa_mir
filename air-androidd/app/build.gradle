apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "ru.alfabank.alfamir"
        minSdkVersion 21
        targetSdkVersion 28
        multiDexEnabled = true
        versionCode 48
        versionName "2.1.3"

        dexOptions {
            javaMaxHeapSize '8192m'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "air $versionName build ${versionCode}.apk"
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'LogNotTimber'
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.10'

    // Dagger
    implementation 'com.google.dagger:dagger-android-support:2.23' // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.23'
    kapt 'com.google.dagger:dagger-compiler:2.23'

    // Butterknife
    implementation 'com.jakewharton:butterknife:10.0.0'
    kapt 'com.jakewharton:butterknife-compiler:10.0.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-support-v4:0.4.0'

    // Room
    implementation 'androidx.room:room-runtime:2.2.3'
    kapt 'androidx.room:room-compiler:2.2.3'
    implementation 'androidx.room:room-rxjava2:2.2.3'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-config:19.1.0'

    // Google
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:24.1-jre'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    implementation 'androidx.mediarouter:mediarouter:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.exifinterface:exifinterface:1.1.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.1.0'

    // Network
    implementation 'com.squareup.okhttp3:okhttp:3.14.4'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    implementation 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation('com.squareup.retrofit2:converter-simplexml:2.3.0') {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    // Other
    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'com.github.yalantis:ucrop:2.2.1'
    implementation "com.github.brianPlummer:tinydancer:0.1.2"
    implementation 'ru.tinkoff.decoro:decoro:1.3.4'
    implementation 'net.danlew:android.joda:2.9.9.1'
    implementation 'com.google.android.exoplayer:exoplayer:2.9.5'
    implementation project(':file-chooser')

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    // image scaling
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.6.0'

    // Alfa
//    implementation 'ru.alfabank.component:ascore:0.1.45'

    implementation('com.theartofdev.edmodo:android-image-cropper:2.4.7') {
        exclude group: 'com.android.support', module: 'exifinterface'
    }

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.18.3"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.multidex:multidex:2.0.1'
    androidTestImplementation 'androidx.multidex:multidex-instrumentation:2.0.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
apply plugin: 'com.google.gms.google-services'

repositories {
    mavenCentral()
}
